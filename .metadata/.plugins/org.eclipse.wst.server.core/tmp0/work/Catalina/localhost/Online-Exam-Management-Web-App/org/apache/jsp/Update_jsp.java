/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.95
 * Generated at: 2024-10-18 05:16:38 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class Update_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("    <link rel =\"icon\" href=\"images/title.png\" type=\"images/png\">\r\n");
      out.write("    <!-- Bootstrap CSS -->\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap-icons@1.5.0/font/bootstrap-icons.css\">\r\n");
      out.write("    <link href=\"https://fonts.googleapis.com/css2?family=Roboto&display=swap\" rel=\"stylesheet\">\r\n");
      out.write("    <!-- Custom CSS (External file) -->\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"resultstyle.css\">\r\n");
      out.write("<title>Update Exam Results</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <nav class=\"navbar navbar-expand-lg\">\r\n");
      out.write("        <a class=\"navbar-brand\" href=\"#\">SmartExam</a>\r\n");
      out.write("        <button\r\n");
      out.write("          class=\"navbar-toggler\"\r\n");
      out.write("          type=\"button\"\r\n");
      out.write("          data-bs-toggle=\"collapse\"\r\n");
      out.write("          data-bs-target=\"#navbarNav\"\r\n");
      out.write("          aria-controls=\"navbarNav\"\r\n");
      out.write("          aria-expanded=\"false\"\r\n");
      out.write("          aria-label=\"Toggle navigation\"\r\n");
      out.write("        >\r\n");
      out.write("          <span class=\"navbar-toggler-icon\"></span>\r\n");
      out.write("        </button>\r\n");
      out.write("        <div class=\"collapse navbar-collapse justify-content-between\" id=\"navbarNav\">\r\n");
      out.write("          <ul class=\"navbar-nav justify-content-center flex-grow-1 pe-3\">\r\n");
      out.write("            <li class=\"nav-item active\">\r\n");
      out.write("              <a class=\"nav-link\" href=\"home2.jsp\">Home</a>\r\n");
      out.write("            </li>\r\n");
      out.write("            <li class=\"nav-item\">\r\n");
      out.write("              <a class=\"nav-link\" href=\"#\">Courses</a>\r\n");
      out.write("            </li>\r\n");
      out.write("            <li class=\"nav-item\">\r\n");
      out.write("              <a class=\"nav-link\" href=\"getResultServlet\">Results</a>\r\n");
      out.write("            </li>\r\n");
      out.write("            <li class=\"nav-item\">\r\n");
      out.write("              <a class=\"nav-link\" href=\"#\">Exams</a>\r\n");
      out.write("            </li>\r\n");
      out.write("            <li class=\"nav-item\">\r\n");
      out.write("              <a class=\"nav-link\" href=\"aboutus2.jsp\">About Us</a>\r\n");
      out.write("            </li>\r\n");
      out.write("          </ul>\r\n");
      out.write("         \r\n");
      out.write("        </div>\r\n");
      out.write("     </nav>\r\n");
      out.write("     \r\n");
      out.write("         <div class=\"container\">\r\n");
      out.write("        <!-- Card Component -->\r\n");
      out.write("        <div class=\"card form-card\">\r\n");
      out.write("            <div class=\"card-header text-center\">\r\n");
      out.write("                <h2>Update Exam Results</h2>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"card-body\">\r\n");

   String resultId = request.getParameter("resultId");
   String studentId = request.getParameter("studentId");
   String examName = request.getParameter("examName");
   String examId = request.getParameter("examId");
   String score = request.getParameter("score");
   String grade = request.getParameter("grade");

      out.write("\r\n");
      out.write("\r\n");
      out.write("              <form id=\"Updateform\" action=\"UpdateServlet\" method=\"post\" onsubmit=\"return validateStudentId();\">\r\n");
      out.write("                <!-- Form Group for Result ID -->\r\n");
      out.write("                     <div class=\"mb-3\">\r\n");
      out.write("                        <label for=\"resultId\" class=\"form-label\">Result ID</label>\r\n");
      out.write("                        <input type=\"text\" class=\"form-control\" id=\"resultId\" name=\"resultId\" value =\"");
      out.print(resultId);
      out.write("\" readonly>\r\n");
      out.write("                    </div>\r\n");
      out.write("\r\n");
      out.write("                    <!-- Form Group for Student ID -->\r\n");
      out.write("                    <div class=\"mb-3\">\r\n");
      out.write("                        <label for=\"studentId\" class=\"form-label\">Student ID</label>\r\n");
      out.write("                        <input type=\"text\" class=\"form-control\" id=\"studentId\" name=\"studentId\" value =\"");
      out.print(studentId);
      out.write("\" required>\r\n");
      out.write("                    </div>\r\n");
      out.write("\r\n");
      out.write("                    <!-- Form Group for Exam Name -->\r\n");
      out.write("                    <div class=\"mb-3\">\r\n");
      out.write("                        <label for=\"examName\" class=\"form-label\">Exam Name</label>\r\n");
      out.write("                        <input type=\"text\" class=\"form-control\" id=\"examName\" name=\"examName\" value =\"");
      out.print(examName);
      out.write("\" required>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <!-- Generated Exam ID -->\r\n");
      out.write("                    <div class=\"mb-3\">\r\n");
      out.write("                        <label for=\"examId\" class=\"form-label\">Exam ID</label>\r\n");
      out.write("                        <input type=\"text\" class=\"form-control\" id=\"examId\" name=\"examId\" value =\"");
      out.print(examId);
      out.write("\" readonly>\r\n");
      out.write("                    </div>\r\n");
      out.write("\r\n");
      out.write("                    <!-- Form Group for Score -->\r\n");
      out.write("                    <div class=\"mb-3\">\r\n");
      out.write("                        <label for=\"score\" class=\"form-label\">Score</label>\r\n");
      out.write("                        <input type=\"number\" class=\"form-control\" id=\"score\" name=\"score\" value =\"");
      out.print(score);
      out.write("\" required onchange=\"calculateGrade()\">\r\n");
      out.write("                    </div>\r\n");
      out.write("\r\n");
      out.write("                    <!-- Auto-generated Grade -->\r\n");
      out.write("                    <div class=\"mb-3\">\r\n");
      out.write("                        <label for=\"grade\" class=\"form-label\">Grade</label>\r\n");
      out.write("                        <input type=\"text\" class=\"form-control\" id=\"grade\" name=\"grade\" value =\"");
      out.print(grade);
      out.write("\" readonly>\r\n");
      out.write("                    </div>\r\n");
      out.write("\r\n");
      out.write("                    <!-- Submit Button -->\r\n");
      out.write("                    <button type=\"submit\" class=\"btn btn-primary\">Update Result</button>\r\n");
      out.write("                </form>\r\n");
      out.write("           </div>\r\n");
      out.write("      </div>\r\n");
      out.write("</div>\r\n");
      out.write("    <!-- Bootstrap JS (Optional for interactive components) -->\r\n");
      out.write("    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js\"></script>\r\n");
      out.write("    <!-- Custom JS (External file) -->\r\n");
      out.write("    <script src=\"script.js\"></script>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
